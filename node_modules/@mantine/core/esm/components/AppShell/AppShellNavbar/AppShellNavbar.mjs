'use client';
import React from 'react';
import 'clsx';
import '@mantine/hooks';
import '../../../core/MantineProvider/Mantine.context.mjs';
import '../../../core/MantineProvider/default-theme.mjs';
import '../../../core/MantineProvider/MantineProvider.mjs';
import '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';
import { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';
import { Box } from '../../../core/Box/Box.mjs';
import { factory } from '../../../core/factory/factory.mjs';
import '../../../core/DirectionProvider/DirectionProvider.mjs';
import { useAppShellContext } from '../AppShell.context.mjs';
import classes from '../AppShell.module.css.mjs';

const defaultProps = {};
const AppShellNavbar = factory((_props, ref) => {
  const props = useProps("AppShellNavbar", defaultProps, _props);
  const { classNames, className, style, styles, unstyled, vars, withBorder, zIndex, ...others } = props;
  const ctx = useAppShellContext();
  if (ctx.disabled) {
    return null;
  }
  return /* @__PURE__ */ React.createElement(
    Box,
    {
      component: "nav",
      ref,
      mod: { "with-border": withBorder ?? ctx.withBorder },
      ...ctx.getStyles("navbar", { className, classNames, styles, style }),
      ...others,
      __vars: {
        "--app-shell-navbar-z-index": `calc(${zIndex ?? ctx.zIndex} + 1)`
      }
    }
  );
});
AppShellNavbar.classes = classes;
AppShellNavbar.displayName = "@mantine/core/AppShellNavbar";

export { AppShellNavbar };
//# sourceMappingURL=AppShellNavbar.mjs.map
