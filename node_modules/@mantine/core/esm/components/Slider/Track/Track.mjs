'use client';
import React from 'react';
import 'clsx';
import '@mantine/hooks';
import '../../../core/MantineProvider/Mantine.context.mjs';
import '../../../core/MantineProvider/default-theme.mjs';
import '../../../core/MantineProvider/MantineProvider.mjs';
import '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';
import { Box } from '../../../core/Box/Box.mjs';
import '../../../core/DirectionProvider/DirectionProvider.mjs';
import { Marks } from '../Marks/Marks.mjs';
import { useSliderContext } from '../Slider.context.mjs';

function Track({
  filled,
  children,
  offset,
  disabled,
  marksOffset,
  inverted,
  containerProps,
  ...others
}) {
  const { getStyles } = useSliderContext();
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Box, { ...getStyles("trackContainer"), mod: { disabled }, ...containerProps }, /* @__PURE__ */ React.createElement(Box, { ...getStyles("track"), mod: { inverted, disabled } }, /* @__PURE__ */ React.createElement(
    Box,
    {
      mod: { inverted, disabled },
      __vars: {
        "--slider-bar-width": `calc(${filled}% + var(--slider-size))`,
        "--slider-bar-offset": `calc(${offset}% - var(--slider-size))`
      },
      ...getStyles("bar")
    }
  ), children, /* @__PURE__ */ React.createElement(Marks, { ...others, offset: marksOffset, disabled, inverted }))));
}
Track.displayName = "@mantine/core/SliderTrack";

export { Track };
//# sourceMappingURL=Track.mjs.map
